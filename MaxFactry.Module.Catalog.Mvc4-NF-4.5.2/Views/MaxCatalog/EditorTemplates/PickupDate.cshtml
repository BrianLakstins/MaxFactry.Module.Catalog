@model System.String
@{
    /*
        additionalViewData definitions
            Help - Help text that displays as a tool tip
            Icon - Name of glyph from http://getbootstrap.com/components/#glyphicons to show at end of text edit field
            LabelColumnWidth - Integer width of label column
            InputControl - string for input control
     */

    string lsValue = string.Empty;
    if (null != Model)
    {
        lsValue = Model.ToString();
    }

    string lsInputClass = string.Empty;
    if (!ViewData.ModelState.IsValidField(ViewData.TemplateInfo.HtmlFieldPrefix))
    {
        lsInputClass = "has-error";
    }

    string lsHelp = string.Empty;
    string lsIcon = "question-sign";
    if (ViewData.ModelMetadata.IsRequired)
    {
        lsIcon = "asterisk";
        lsHelp = "Required";
    }

    if (null != ViewData["Help"] && ViewData["Help"] is string)
    {
        lsHelp = (string)ViewData["Help"];
    }

    if (null != ViewData["Icon"] && ViewData["Icon"] is string)
    {
        lsIcon = (string)ViewData["Icon"];
    }

    if (!string.IsNullOrEmpty(lsHelp))
    {
        lsInputClass += " input-group";
    }

    IHtmlString lsInputControl = null;
    if (null != ViewData["InputControl"] && ViewData["InputControl"] is IHtmlString)
    {
        lsInputControl = (IHtmlString)ViewData["InputControl"];
    }

    IHtmlString lsTimeControl = null;
    if (null != ViewData["TimeControl"] && ViewData["TimeControl"] is IHtmlString)
    {
        lsTimeControl = (IHtmlString)ViewData["TimeControl"];
    }    

    int lnLabelColumnWidth = 1;
    if (null != ViewData["LabelColumnWidth"])
    {
        lnLabelColumnWidth = MaxFactry.Core.MaxConvertLibrary.ConvertToInt(ViewData.GetType(), ViewData["LabelColumnWidth"]);
    }

    int lnInputColumnWidth = 12 - lnLabelColumnWidth;
    lsInputClass += " form-inline";
}
<div class="row">
    <div class="form-group">
        <label class="control-label col-sm-@lnLabelColumnWidth" for="@ViewData.TemplateInfo.GetFullHtmlFieldId(string.Empty)">@ViewData.ModelMetadata.DisplayName</label>
        <div class="col-sm-@lnInputColumnWidth">
            <div class="@lsInputClass">
                @if (null != lsInputControl)
                {
                    @lsInputControl
                }
                else
                {
                    <div class="form-group">
                    <input class="form-control" id="@ViewData.TemplateInfo.GetFullHtmlFieldId(string.Empty)" name="@ViewData.TemplateInfo.GetFullHtmlFieldName(string.Empty)" type="date" value="@lsValue" />
                </div>
                <div class="form-group">
                    <label class="control-label" for="@(ViewData.TemplateInfo.GetFullHtmlFieldId(string.Empty))_time">Time</label>
                    @lsTimeControl
                </div>
                }

        @if (!string.IsNullOrEmpty(lsHelp))
                {
            <span class="tooltipactive btn input-group-addon" data-placement="left" data-toggle="tooltip" title="@lsHelp">
                <span class="glyphicon glyphicon-@lsIcon"></span>
            </span>
                }
    </div>
            @if (null != ViewData.ModelState[ViewData.TemplateInfo.HtmlFieldPrefix])
            {
                foreach (var loError in ViewData.ModelState[ViewData.TemplateInfo.HtmlFieldPrefix].Errors)
                {
                    <span class="help-block">@loError.ErrorMessage</span>
                }
            }
        </div>
    </div>
</div>